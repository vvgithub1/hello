{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "df_raw_cases_and_deaths",
						"type": "DatasetReference"
					},
					"name": "CasesAndNamesStream"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FilterEropeOnly"
				},
				{
					"name": "SelectOnlyRequiredFields"
				},
				{
					"name": "PivontCounts"
				}
			],
			"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as integer,\n\t\tdate as date,\n\t\trate_14_day as double,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CasesAndNamesStream\nCasesAndNamesStream filter(continent == \"Europe\" && not(isNull(country_code))) ~> FilterEropeOnly\nFilterEropeOnly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tindicator,\n\t\tdaily_count,\n\t\tsource,\n\t\teach(match(name == \"date\"),\n\t\t\t\"reported_date\" = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOnlyRequiredFields\nSelectOnlyRequiredFields pivot(groupBy(country,\n\t\t{} = ERROR_FUNCTION('')),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> PivontCounts"
		}
	}
}